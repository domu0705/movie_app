{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gTA+BeA,MA3Bf,YAAmD,IAAnCC,EAAkC,EAAlCA,KAAKC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,QAAQC,EAAe,EAAfA,OAAOC,EAAQ,EAARA,OACzC,OACG,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAQI,IAAKN,IACvB,yBAAKI,UAAU,eACX,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACTD,EAAOI,KAAI,SAACC,EAAMC,GAAP,OACZ,wBAAIC,IAAKD,EAAOL,UAAU,iBAAiBI,OAG/C,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UC2CGC,G,kNAnDbC,MAAQ,CACNC,WAAU,EACVC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,2DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAACN,SAAQD,WAAU,IARvB,2C,kEAYVQ,KAAKN,c,+BAGE,IAAD,EACqBM,KAAKT,MAAvBC,EADH,EACGA,UAAUC,EADb,EACaA,OACjB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAW,UACd,0BAAMA,UAAU,gBAAhB,gBAGF,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAK,OACjB,kBAAC,EAAD,CACEb,IAAOa,EAAMC,GACbA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GAxCZuB,IAAMC,YCHxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.94262493.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\n\r\nfunction Movie({year,title,summary,poster,genres}){\r\n return(\r\n    <div className=\"movie\">\r\n        <img src={poster} alt={title}/>\r\n        <div className=\"movie__data\">\r\n            <h3 className=\"movie__title\">{title}</h3>\r\n            <h5 className=\"movie__year\">{year}</h5>\r\n            <ul className=\"movie__genres\" > \r\n                {genres.map((genre,index)=>(\r\n                <li key={index} className=\"genres__genre\">{genre}</li>\r\n                ))}\r\n            </ul>{/* slice로 summary를 잘라줌*/}\r\n            <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n        </div>\r\n     </div>\r\n );\r\n}\r\n\r\nMovie.propTypes ={\r\n    id: PropTypes.number.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    summary: PropTypes.string.isRequired,\r\n    poster: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\nimport \"./Movie.css\";\n\n/*App compoment를 만들기. App 이 component를 확장함.*/\nclass App extends React.Component{\n  state = {\n    isLoading:true, \n    movies: [] \n  };\n\n  /*async 로 기다리라고해! await 로 axios가끝날때까지 기다리라고 알려줌 */\n  getMovies = async () =>{\n    const {\n      data : {\n        data : {movies}\n      }\n    } = await axios.get(\n      \"http://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n      );\n    this.setState({movies, isLoading:false});\n  };\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  render(){\n      const {isLoading,movies}=this.state;\n      return (\n        <section className=\"container\">\n          {isLoading ? (\n            <div className =\"loader\">\n              <span className=\"loader__text\">Loading... </span>\n            </div> \n          ): (\n            <div className=\"movies\">\n              {movies.map(movie=>(\n              <Movie \n                key = {movie.id}\n                id={movie.id} \n                year={movie.year} \n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n              ))}\n            </div>\n            )\n          }\n        </section>\n      );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}